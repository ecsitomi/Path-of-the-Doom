import pygame

_ = False
x = False
mini_map = [
    [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [2, _, _, _, _, _, _, 4, 1, _, _, _, _, _, _, 1, _, _, 4, _, _, _, _, _, _, _, _, _, _, _, 1],
    [2, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, _, _, 4, _, _, _, 1, _, _, _, _, _, _, _, 1],
    [2, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [2, _, _, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [2, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1],
    [2, _, _, 1, 1, 1, 1, 1, 1, 1, _, _, 1, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [2, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1],
    [2, _, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, 1, _, _, _, _, 1, _, _, 1],
    [2, _, _, _, _, _, _, 1, _, _, _, _, _, _, 4, 1, _, _, 1, _, _, _, _, _, _, _, _, 4, 3, _, 1],
    [2, _, _, 3, 1, 1, _, 1, _, _, _, _, _, _, 4, 1, _, _, 1, _, _, _, 1, _, _, _, _, 3, _, 3, 1],
    [2, _, _, _, _, _, 4, 1, 1, _, 1, 1, 1, _, 1, 1, 1, 1, 1, _, 3, 3, 1, 1, 1, _, 1, x, x, x, 5],
    [2, _, _, 1, 1, 1, 1, 1, x, x, x, 3, x, x, x, 1, 4, 1, 1, x, x, x, x, 1, 1, x, x, x, 1, 1, 1],
    [2, _, x, x, x, x, x, x, x, 3, x, x, x, 3, x, 3, _, 3, 1, x, 1, 1, x, 1, 1, x, 1, 1, _, 1, 1],
    [2, _, _, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, x, x, x, x, x, x, 3, 1, x, x, x, x, _, _, _, 1, 1],
    [2, _, _, _, _, _, _, _, _, _, _, _, 1, 4, 1, 3, _, 1, 1, _, 1, 1, 1, 3, 1, 1, 1, 1, _, _, 1],
    [2, _, _, 1, 1, 1, 1, 1, 1, 1, _, _, 1, _, _, 1, _, _, 4, _, _, _, _, _, _, _, _, 4, 1, _, 1],
    [2, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1],
    [2, _, _, 1, 1, 1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 4],
    [2, _, _, _, _, _, _, 4, 1, _, _, _, _, _, _, 4, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, 1],
    [2, _, _, 1, _, _, _, 4, _, _, _, _, _, _, _, 4, _, _, 1, _, _, _, 1, _, _, _, _, _, _, _, 1],
    [2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]


class Map:
    def __init__ (self, game):
        self.game = game
        self.mini_map = mini_map
        self.world_map = {}
        self.get_map()
        self.victory_pos = self.get_victory_pos()

    def get_map(self):
        for y, row in enumerate(self.mini_map):
            for x, tile in enumerate(row):
                if tile:
                    self.world_map[(x, y)] = tile

    def get_victory_pos(self):
        for y, row in enumerate(self.mini_map):
            for x, tile in enumerate(row):
                if tile == 5: 
                    return x, y
        return None

    def draw(self):
        [pygame.draw.rect(self.game.screen, 'white', (pos[0] *100, pos[1] * 100, 100, 100),2)
         for pos in self.world_map.keys()]
        
    def update(self):
        pass